// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckedMap should render map 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  height: 32.5rem;
  width: 48.75rem;
}

<body>
    <div>
      <div>
        <div
          class="emotion-0"
        >
          <div
            controls=""
            events="[object Object]"
            options="[object Object]"
          >
            <div
              id="OutlineMapDataSourceProvider"
            >
              <div
                id="OutlineLayerProvider"
                options="[object Object]"
                type="PolygonLayer"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  height: 32.5rem;
  width: 48.75rem;
}

<div>
    <div>
      <div
        class="emotion-0"
      >
        <div
          controls=""
          events="[object Object]"
          options="[object Object]"
        >
          <div
            id="OutlineMapDataSourceProvider"
          >
            <div
              id="OutlineLayerProvider"
              options="[object Object]"
              type="PolygonLayer"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckedMap should render nothing 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  height: 32.5rem;
  width: 48.75rem;
}

<body>
    <div>
      <div>
        <div
          class="emotion-0"
        >
          <div
            controls=""
            events="[object Object]"
            options="[object Object]"
          >
            <div
              id="OutlineMapDataSourceProvider"
            >
              <div
                id="OutlineLayerProvider"
                options="[object Object]"
                type="PolygonLayer"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  height: 32.5rem;
  width: 48.75rem;
}

<div>
    <div>
      <div
        class="emotion-0"
      >
        <div
          controls=""
          events="[object Object]"
          options="[object Object]"
        >
          <div
            id="OutlineMapDataSourceProvider"
          >
            <div
              id="OutlineLayerProvider"
              options="[object Object]"
              type="PolygonLayer"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
