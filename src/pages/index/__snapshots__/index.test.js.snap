// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Index should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  margin-top: 3.375rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1 {
  max-width: 560px;
  text-align: center;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  gap: 1rem;
  margin: 1rem 0;
}

.emotion-3 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 300px;
}

.emotion-4 {
  margin: 0.75rem 0 1.125rem 0;
}

.emotion-5 {
  margin: 0.5rem 0;
  font-size: 0.813rem;
  height: 1.5rem;
  line-height: 1.5rem;
  min-width: auto;
}

<body>
    <div>
      <div
        class="emotion-0"
      >
        <h2>
          maps.creator.manifest.tool
        </h2>
        <p
          class="emotion-1"
        >
          <div>
            home.page.description
          </div>
        </p>
        <div
          class="emotion-2"
        >
          <div
            class="emotion-3"
          >
            <div
              class="ms-Image emotion-4 root-108"
            >
              <img
                class="ms-Image-image ms-Image-image--portrait is-notLoaded is-fadeIn image-109"
                src="create.svg"
              />
            </div>
            <h3>
              create.new.manifest
            </h3>
            <button
              class="ms-Button ms-Button--primary emotion-5 root-110"
              data-is-focusable="true"
              type="button"
            >
              <span
                class="ms-Button-flexContainer flexContainer-111"
                data-automationid="splitbuttonprimary"
              >
                <span
                  class="ms-Button-textContainer textContainer-112"
                >
                  <span
                    class="ms-Button-label label-114"
                    id="id__0"
                  >
                    create
                  </span>
                </span>
              </span>
            </button>
          </div>
          <div
            class="emotion-3"
          >
            <div
              class="ms-Image emotion-4 root-108"
            >
              <img
                class="ms-Image-image ms-Image-image--portrait is-notLoaded is-fadeIn image-109"
                src="edit.svg"
              />
            </div>
            <h3>
              edit.existing.manifest
            </h3>
            <button
              class="ms-Button ms-Button--primary emotion-5 root-110"
              data-is-focusable="true"
              type="button"
            >
              <span
                class="ms-Button-flexContainer flexContainer-111"
                data-automationid="splitbuttonprimary"
              >
                <span
                  class="ms-Button-textContainer textContainer-112"
                >
                  <span
                    class="ms-Button-label label-114"
                    id="id__3"
                  >
                    edit
                  </span>
                </span>
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  margin-top: 3.375rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1 {
  max-width: 560px;
  text-align: center;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  gap: 1rem;
  margin: 1rem 0;
}

.emotion-3 {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 300px;
}

.emotion-4 {
  margin: 0.75rem 0 1.125rem 0;
}

.emotion-5 {
  margin: 0.5rem 0;
  font-size: 0.813rem;
  height: 1.5rem;
  line-height: 1.5rem;
  min-width: auto;
}

<div>
    <div
      class="emotion-0"
    >
      <h2>
        maps.creator.manifest.tool
      </h2>
      <p
        class="emotion-1"
      >
        <div>
          home.page.description
        </div>
      </p>
      <div
        class="emotion-2"
      >
        <div
          class="emotion-3"
        >
          <div
            class="ms-Image emotion-4 root-108"
          >
            <img
              class="ms-Image-image ms-Image-image--portrait is-notLoaded is-fadeIn image-109"
              src="create.svg"
            />
          </div>
          <h3>
            create.new.manifest
          </h3>
          <button
            class="ms-Button ms-Button--primary emotion-5 root-110"
            data-is-focusable="true"
            type="button"
          >
            <span
              class="ms-Button-flexContainer flexContainer-111"
              data-automationid="splitbuttonprimary"
            >
              <span
                class="ms-Button-textContainer textContainer-112"
              >
                <span
                  class="ms-Button-label label-114"
                  id="id__0"
                >
                  create
                </span>
              </span>
            </span>
          </button>
        </div>
        <div
          class="emotion-3"
        >
          <div
            class="ms-Image emotion-4 root-108"
          >
            <img
              class="ms-Image-image ms-Image-image--portrait is-notLoaded is-fadeIn image-109"
              src="edit.svg"
            />
          </div>
          <h3>
            edit.existing.manifest
          </h3>
          <button
            class="ms-Button ms-Button--primary emotion-5 root-110"
            data-is-focusable="true"
            type="button"
          >
            <span
              class="ms-Button-flexContainer flexContainer-111"
              data-automationid="splitbuttonprimary"
            >
              <span
                class="ms-Button-textContainer textContainer-112"
              >
                <span
                  class="ms-Button-label label-114"
                  id="id__3"
                >
                  edit
                </span>
              </span>
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
