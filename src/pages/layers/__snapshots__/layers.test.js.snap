// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layers should render Layers component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  margin-bottom: 1rem;
  max-width: 31.25rem;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: wrap;
  -webkit-flex-flow: wrap;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  gap: 3rem;
}

.emotion-2 {
  width: 47rem;
  max-width: 100%;
}

<body>
    <div>
      <div
        class="emotion-0"
      >
        <div
          class="ms-MessageBar ms-MessageBar-multiline root-109"
        >
          <div
            class="ms-MessageBar-content content-110"
          >
            <div
              aria-hidden="true"
              class="ms-MessageBar-icon iconContainer-111"
            >
              <i
                aria-hidden="true"
                class="icon-121"
                data-icon-name="Info"
              >
                
              </i>
            </div>
            <div
              aria-live="polite"
              class="ms-MessageBar-text text-113"
              id="MessageBar0"
              role="status"
            >
              <span
                class="ms-MessageBar-innerText innerText-114"
              />
            </div>
          </div>
        </div>
      </div>
      <div
        class="emotion-1"
      >
        <div
          class="emotion-2"
        >
          <div>
            {"id":0,"name":"base layer","props":[{"id":2,"name":"","isDraft":false,"value":[]}],"value":["this","is","my","fav","layer"],"isDraft":false}
          </div>
          <div>
            {"id":1,"name":"interior","props":[{"id":4,"name":"","isDraft":true,"value":[]}],"value":["walls","ratatata"],"isDraft":false}
          </div>
          <div>
            {"id":3,"name":"","props":[],"value":[],"isDraft":true}
          </div>
        </div>
        Layer Preview
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  margin-bottom: 1rem;
  max-width: 31.25rem;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: wrap;
  -webkit-flex-flow: wrap;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  gap: 3rem;
}

.emotion-2 {
  width: 47rem;
  max-width: 100%;
}

<div>
    <div
      class="emotion-0"
    >
      <div
        class="ms-MessageBar ms-MessageBar-multiline root-109"
      >
        <div
          class="ms-MessageBar-content content-110"
        >
          <div
            aria-hidden="true"
            class="ms-MessageBar-icon iconContainer-111"
          >
            <i
              aria-hidden="true"
              class="icon-121"
              data-icon-name="Info"
            >
              
            </i>
          </div>
          <div
            aria-live="polite"
            class="ms-MessageBar-text text-113"
            id="MessageBar0"
            role="status"
          >
            <span
              class="ms-MessageBar-innerText innerText-114"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      class="emotion-1"
    >
      <div
        class="emotion-2"
      >
        <div>
          {"id":0,"name":"base layer","props":[{"id":2,"name":"","isDraft":false,"value":[]}],"value":["this","is","my","fav","layer"],"isDraft":false}
        </div>
        <div>
          {"id":1,"name":"interior","props":[{"id":4,"name":"","isDraft":true,"value":[]}],"value":["walls","ratatata"],"isDraft":false}
        </div>
        <div>
          {"id":3,"name":"","props":[],"value":[],"isDraft":true}
        </div>
      </div>
      Layer Preview
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
