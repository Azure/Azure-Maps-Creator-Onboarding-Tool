// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layers Delete Icon should render Delete Icon 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  width: 1.5rem;
  margin-left: 0.25rem;
}

.emotion-1 {
  color: black;
  font-size: 0.813rem;
  width: 1.5rem;
  height: 1.5rem;
}

.emotion-1:hover {
  color: black;
}

<body>
    <div>
      <div
        class="emotion-0"
      >
        <button
          aria-label="Foo"
          class="ms-Button ms-Button--icon emotion-1 root-108"
          data-is-focusable="true"
          data-testid="delete-icon"
          title="Foo"
          type="button"
        >
          <span
            class="ms-Button-flexContainer flexContainer-109"
            data-automationid="splitbuttonprimary"
          >
            <i
              aria-hidden="true"
              class="ms-Icon root-101 emotion-2 ms-Button-icon icon-111"
              data-icon-name="StatusCircleErrorX"
              style="font-family: \\"FabricMDL2Icons-9\\";"
            >
              
            </i>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  width: 1.5rem;
  margin-left: 0.25rem;
}

.emotion-1 {
  color: black;
  font-size: 0.813rem;
  width: 1.5rem;
  height: 1.5rem;
}

.emotion-1:hover {
  color: black;
}

<div>
    <div
      class="emotion-0"
    >
      <button
        aria-label="Foo"
        class="ms-Button ms-Button--icon emotion-1 root-108"
        data-is-focusable="true"
        data-testid="delete-icon"
        title="Foo"
        type="button"
      >
        <span
          class="ms-Button-flexContainer flexContainer-109"
          data-automationid="splitbuttonprimary"
        >
          <i
            aria-hidden="true"
            class="ms-Icon root-101 emotion-2 ms-Button-icon icon-111"
            data-icon-name="StatusCircleErrorX"
            style="font-family: \\"FabricMDL2Icons-9\\";"
          >
            
          </i>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Layers Delete Icon should render nothing when isDraft is true 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;